"use strict";
/*
  The MIT License

  Copyright (c) 2017-2019 EclipseSource Munich
  https://github.com/eclipsesource/jsonforms

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@jsonforms/core");
var react_1 = tslib_1.__importStar(require("react"));
var get_1 = tslib_1.__importDefault(require("lodash/get"));
var isEqual_1 = tslib_1.__importDefault(require("lodash/isEqual"));
var omit_1 = tslib_1.__importDefault(require("lodash/omit"));
var initialCoreState = {
    data: {},
    schema: {},
    uischema: undefined,
    errors: [],
    validator: function () { return true; },
    ajv: undefined,
    refParserOptions: undefined
};
exports.JsonFormsContext = react_1.default.createContext({
    core: initialCoreState,
    renderers: []
});
/**
 * Hook similar to `useEffect` with the difference that the effect
 * is only executed from the second call onwards.
 */
var useEffectAfterFirstRender = function (effect, dependencies) {
    var firstExecution = react_1.useRef(true);
    react_1.useEffect(function () {
        if (firstExecution.current) {
            firstExecution.current = false;
            return;
        }
        effect();
    }, dependencies);
};
exports.JsonFormsStateProvider = function (_a) {
    var children = _a.children, initState = _a.initState, onChange = _a.onChange;
    var _b = initState.core, data = _b.data, schema = _b.schema, uischema = _b.uischema, ajv = _b.ajv, refParserOptions = _b.refParserOptions, validationMode = _b.validationMode;
    // Initialize core immediately
    var _c = react_1.useReducer(core_1.coreReducer, undefined, function () { return core_1.coreReducer(initState.core, core_1.Actions.init(data, schema, uischema, { ajv: ajv, refParserOptions: refParserOptions, validationMode: validationMode })); }), core = _c[0], coreDispatch = _c[1];
    react_1.useEffect(function () {
        coreDispatch(core_1.Actions.updateCore(data, schema, uischema, { ajv: ajv, refParserOptions: refParserOptions, validationMode: validationMode }));
    }, [data, schema, uischema, ajv, refParserOptions, validationMode]);
    var _d = react_1.useReducer(core_1.configReducer, undefined, function () { return core_1.configReducer(undefined, core_1.Actions.setConfig(initState.config)); }), config = _d[0], configDispatch = _d[1];
    useEffectAfterFirstRender(function () {
        configDispatch(core_1.Actions.setConfig(initState.config));
    }, [initState.config]);
    var contextValue = react_1.useMemo(function () { return ({
        core: core,
        renderers: initState.renderers,
        cells: initState.cells,
        config: config,
        uischemas: initState.uischemas,
        readonly: initState.readonly,
        // only core dispatch available
        dispatch: coreDispatch,
    }); }, [core, initState.renderers, initState.cells, config, initState.readonly]);
    var onChangeRef = react_1.useRef(onChange);
    react_1.useEffect(function () {
        onChangeRef.current = onChange;
    }, [onChange]);
    react_1.useEffect(function () {
        var _a;
        (_a = onChangeRef.current) === null || _a === void 0 ? void 0 : _a.call(onChangeRef, { data: core.data, errors: core.errors });
    }, [core.data, core.errors]);
    return (react_1.default.createElement(exports.JsonFormsContext.Provider, { value: contextValue }, children));
};
exports.useJsonForms = function () {
    return react_1.useContext(exports.JsonFormsContext);
};
exports.ctxToArrayLayoutProps = function (ctx, props) {
    return core_1.mapStateToArrayLayoutProps({ jsonforms: tslib_1.__assign({}, ctx) }, props);
};
exports.ctxToArrayControlProps = function (ctx, props) {
    return core_1.mapStateToArrayControlProps({ jsonforms: tslib_1.__assign({}, ctx) }, props);
};
exports.ctxToLayoutProps = function (ctx, props) {
    return core_1.mapStateToLayoutProps({ jsonforms: tslib_1.__assign({}, ctx) }, props);
};
exports.ctxToControlProps = function (ctx, props) {
    return core_1.mapStateToControlProps({ jsonforms: tslib_1.__assign({}, ctx) }, props);
};
exports.ctxToEnumControlProps = function (ctx, props) {
    return core_1.mapStateToEnumControlProps({ jsonforms: tslib_1.__assign({}, ctx) }, props);
};
exports.ctxToOneOfEnumControlProps = function (ctx, props) {
    return core_1.mapStateToOneOfEnumControlProps({ jsonforms: tslib_1.__assign({}, ctx) }, props);
};
exports.ctxToMultiEnumControlProps = function (ctx, props) {
    return core_1.mapStateToMultiEnumControlProps({ jsonforms: tslib_1.__assign({}, ctx) }, props);
};
exports.ctxToControlWithDetailProps = function (ctx, props) {
    return core_1.mapStateToControlWithDetailProps({ jsonforms: tslib_1.__assign({}, ctx) }, props);
};
exports.ctxToAllOfProps = function (ctx, ownProps) {
    var props = core_1.mapStateToAllOfProps({ jsonforms: tslib_1.__assign({}, ctx) }, ownProps);
    return tslib_1.__assign({}, props);
};
exports.ctxDispatchToControlProps = function (dispatch) { return ({
    handleChange: react_1.useCallback(function (path, value) {
        dispatch(core_1.update(path, function () { return value; }));
    }, [dispatch, core_1.update])
}); };
// context mappers
exports.ctxToAnyOfProps = function (ctx, ownProps) {
    var props = core_1.mapStateToAnyOfProps({ jsonforms: tslib_1.__assign({}, ctx) }, ownProps);
    var handleChange = exports.ctxDispatchToControlProps(ctx.dispatch).handleChange;
    return tslib_1.__assign(tslib_1.__assign({}, props), { handleChange: handleChange });
};
exports.ctxToOneOfProps = function (ctx, ownProps) {
    var props = core_1.mapStateToOneOfProps({ jsonforms: tslib_1.__assign({}, ctx) }, ownProps);
    var handleChange = exports.ctxDispatchToControlProps(ctx.dispatch).handleChange;
    return tslib_1.__assign(tslib_1.__assign({}, props), { handleChange: handleChange });
};
exports.ctxToJsonFormsDispatchProps = function (ctx, ownProps) { return core_1.mapStateToJsonFormsRendererProps({ jsonforms: tslib_1.__assign({}, ctx) }, ownProps); };
exports.ctxDispatchToArrayControlProps = function (dispatch) {
    return core_1.mapDispatchToArrayControlProps(dispatch);
};
exports.ctxToMasterListItemProps = function (ctx, ownProps) { return core_1.mapStateToMasterListItemProps({ jsonforms: tslib_1.__assign({}, ctx) }, ownProps); };
exports.ctxToCellProps = function (ctx, ownProps) {
    return core_1.mapStateToCellProps({ jsonforms: tslib_1.__assign({}, ctx) }, ownProps);
};
exports.ctxToEnumCellProps = function (ctx, ownProps) {
    return core_1.defaultMapStateToEnumCellProps({ jsonforms: tslib_1.__assign({}, ctx) }, ownProps);
};
exports.ctxToDispatchCellProps = function (ctx, ownProps) {
    return core_1.mapStateToDispatchCellProps({ jsonforms: tslib_1.__assign({}, ctx) }, ownProps);
};
exports.ctxDispatchToMultiEnumProps = function (dispatch) {
    return core_1.mapDispatchToMultiEnumProps(dispatch);
};
exports.withJsonFormsContext = function (Component) { return function (props) {
    var ctx = exports.useJsonForms();
    return react_1.default.createElement(Component, { ctx: ctx, props: props });
}; };
var withContextToControlProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var controlProps = exports.ctxToControlProps(ctx, props);
        var handleChange = exports.ctxDispatchToControlProps(ctx.dispatch).handleChange;
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, controlProps, { handleChange: handleChange })));
    };
};
var withContextToLayoutProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var layoutProps = exports.ctxToLayoutProps(ctx, props);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, layoutProps)));
    };
};
var withContextToOneOfProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var oneOfProps = exports.ctxToOneOfProps(ctx, props);
        var handleChange = exports.ctxDispatchToControlProps(ctx.dispatch).handleChange;
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, oneOfProps, { handleChange: handleChange })));
    };
};
var withContextToAnyOfProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var oneOfProps = exports.ctxToAnyOfProps(ctx, props);
        var handleChange = exports.ctxDispatchToControlProps(ctx.dispatch).handleChange;
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, oneOfProps, { handleChange: handleChange })));
    };
};
var withContextToAllOfProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var allOfProps = exports.ctxToAllOfProps(ctx, props);
        var handleChange = exports.ctxDispatchToControlProps(ctx.dispatch).handleChange;
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, allOfProps, { handleChange: handleChange })));
    };
};
var withContextToDetailProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var detailProps = exports.ctxToControlWithDetailProps(ctx, props);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, detailProps)));
    };
};
var withContextToArrayLayoutProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var arrayLayoutProps = exports.ctxToArrayLayoutProps(ctx, props);
        var dispatchProps = exports.ctxDispatchToArrayControlProps(ctx.dispatch);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, arrayLayoutProps, dispatchProps)));
    };
};
var withContextToArrayControlProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var stateProps = exports.ctxToArrayControlProps(ctx, props);
        var dispatchProps = exports.ctxDispatchToArrayControlProps(ctx.dispatch);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, stateProps, dispatchProps)));
    };
};
var withContextToMasterListItemProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var stateProps = exports.ctxToMasterListItemProps(ctx, props);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, stateProps)));
    };
};
var withContextToCellProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var cellProps = exports.ctxToCellProps(ctx, props);
        var dispatchProps = exports.ctxDispatchToControlProps(ctx.dispatch);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, dispatchProps, cellProps)));
    };
};
var withContextToDispatchCellProps = function (Component) { return function (_a) {
    var ctx = _a.ctx, props = _a.props;
    var cellProps = exports.ctxToDispatchCellProps(ctx, props);
    var dispatchProps = exports.ctxDispatchToControlProps(ctx.dispatch);
    return react_1.default.createElement(Component, tslib_1.__assign({}, props, dispatchProps, cellProps));
}; };
var withContextToEnumCellProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var cellProps = exports.ctxToEnumCellProps(ctx, props);
        var dispatchProps = exports.ctxDispatchToControlProps(ctx.dispatch);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, dispatchProps, cellProps)));
    };
};
var withContextToEnumProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var stateProps = exports.ctxToEnumControlProps(ctx, props);
        var dispatchProps = exports.ctxDispatchToControlProps(ctx.dispatch);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, dispatchProps, stateProps, { options: stateProps.options })));
    };
};
var withContextToOneOfEnumProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var stateProps = exports.ctxToOneOfEnumControlProps(ctx, props);
        var dispatchProps = exports.ctxDispatchToControlProps(ctx.dispatch);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, dispatchProps, stateProps, { options: stateProps.options })));
    };
};
var withContextToMultiEnumProps = function (Component) {
    return function (_a) {
        var ctx = _a.ctx, props = _a.props;
        var stateProps = exports.ctxToMultiEnumControlProps(ctx, props);
        var dispatchProps = exports.ctxDispatchToMultiEnumProps(ctx.dispatch);
        return (react_1.default.createElement(Component, tslib_1.__assign({}, props, dispatchProps, stateProps, { options: stateProps.options })));
    };
};
exports.areEqual = function (prevProps, nextProps) {
    var prev = omit_1.default(prevProps, ['schema', 'uischema', 'handleChange', 'renderers', 'cells', 'uischemas']);
    var next = omit_1.default(nextProps, ['schema', 'uischema', 'handleChange', 'renderers', 'cells', 'uischemas']);
    return isEqual_1.default(prev, next)
        && get_1.default(prevProps, 'renderers') === get_1.default(nextProps, 'renderers')
        && get_1.default(prevProps, 'cells') === get_1.default(nextProps, 'cells')
        && get_1.default(prevProps, 'uischemas') === get_1.default(nextProps, 'uischemas')
        && get_1.default(prevProps, 'schema') === get_1.default(nextProps, 'schema')
        && get_1.default(prevProps, 'uischema') === get_1.default(nextProps, 'uischema');
};
// top level HOCs --
exports.withJsonFormsControlProps = function (Component) {
    return exports.withJsonFormsContext(withContextToControlProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsLayoutProps = function (Component) {
    return exports.withJsonFormsContext(withContextToLayoutProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsOneOfProps = function (Component) {
    return exports.withJsonFormsContext(withContextToOneOfProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsAnyOfProps = function (Component) {
    return exports.withJsonFormsContext(withContextToAnyOfProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsAllOfProps = function (Component) {
    return exports.withJsonFormsContext(withContextToAllOfProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsDetailProps = function (Component) {
    return exports.withJsonFormsContext(withContextToDetailProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsArrayLayoutProps = function (Component) {
    return exports.withJsonFormsContext(withContextToArrayLayoutProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsArrayControlProps = function (Component) {
    return exports.withJsonFormsContext(withContextToArrayControlProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsMasterListItemProps = function (Component) {
    return exports.withJsonFormsContext(withContextToMasterListItemProps(react_1.default.memo(Component, function (prevProps, nextProps) {
        return exports.areEqual(omit_1.default(prevProps, ['handleSelect', 'removeItem']), omit_1.default(nextProps, ['handleSelect', 'removeItem']));
    })));
};
exports.withJsonFormsCellProps = function (Component) {
    return exports.withJsonFormsContext(withContextToCellProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsDispatchCellProps = function (Component) {
    return exports.withJsonFormsContext(withContextToDispatchCellProps(react_1.default.memo(Component, function (prevProps, nextProps) {
        return exports.areEqual(prevProps, nextProps);
    })));
};
exports.withJsonFormsEnumCellProps = function (Component) {
    return exports.withJsonFormsContext(withContextToEnumCellProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsEnumProps = function (Component) {
    return exports.withJsonFormsContext(withContextToEnumProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsOneOfEnumProps = function (Component) {
    return exports.withJsonFormsContext(withContextToOneOfEnumProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
exports.withJsonFormsMultiEnumProps = function (Component) {
    return exports.withJsonFormsContext(withContextToMultiEnumProps(react_1.default.memo(Component, function (prevProps, nextProps) { return exports.areEqual(prevProps, nextProps); })));
};
// --
//# sourceMappingURL=JsonFormsContext.js.map